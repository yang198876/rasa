name: Vulnerability Scan

on:
  schedule:
    # Run every third day
    - cron: 0 0 * * */3

jobs:
  scan:
    name: Vulnerability scan
    runs-on: ubuntu-latest

    env:
      DOCKERFILE: Dockerfile_with_poetry_lock

    steps:
    - name: Checkout git repository üïù
      uses: actions/checkout@v2

    - name: Add poetry.lock üîí
      # Trivy depends on the presence of `poetry.lock` to scan Python dependencies
      run: |
        BASE_IMAGE=rasa/rasa:latest-full
        docker pull $BASE_IMAGE

        # Create Dockerfile which includes poetry.lock
        tee -a $DOCKERFILE << END
        FROM $BASE_IMAGE
        COPY poetry.lock .
        END

        IMAGE_NAME=rasa/rasa:latest-scanned
        docker build -f $DOCKERFILE -t $IMAGE_NAME .

        echo "IMAGE_WITH_POETRY_LOCK=$IMAGE_NAME" >> $GITHUB_ENV

    - name: Scan image üïµÔ∏è‚Äç‚ôÄÔ∏èüïµÔ∏è‚Äç‚ôÇÔ∏è
      uses: wochinge/gitrivy@6bf026b
      with:
        # Needs the token so it can create an issue once a vulnerability was found
        token: ${{ secrets.GITHUB_TOKEN }}
        image: ${{ env.IMAGE_WITH_POETRY_LOCK }}
        ignore_unfixed: true
        issue_label: "tool:trivy,type:vulnerability"
        fail_on_vulnerabilities: true

    - name: Notify slack on failure
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel_id: ${{ secrets.SLACK_ALERTS_CHANNEL_ID }}
        status: FAILED
        color: danger
